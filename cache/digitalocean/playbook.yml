---
- hosts: dockerhost

  roles:
    - { role: kamaln7.swapfile, swapfile_swappiness: 10, swapfile_vfs_cache_pressure: 50 }

  tasks:
  - name: install docker
    apt:
      update_cache: yes
      name: docker.io

  - name: install docker
    apt:
      update_cache: yes
      name: docker-compose

  - name: install htop
    apt:
      name: htop

  - name: install ufw
    apt:
      name: ufw

  - name: Configure ufw defaults
    ufw: direction={{ item.direction }} policy={{ item.policy }}
    with_items:
      - { direction: 'incoming', policy: 'deny' }
      - { direction: 'outgoing', policy: 'allow' }
    # notify:
    #   - restart ufw

  - name: Configure ufw rules
    ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
    with_items:
      - { rule: 'limit', port: '{{ ssh_port | default("22") }}', proto: 'tcp' }
      - { rule: 'allow', port: '80', proto: 'tcp' }
      - { rule: 'allow', port: '443', proto: 'tcp' }
    # notify:
    #   - restart ufw

  - name: Enable ufw logging
    ufw: logging=on
    # notify:
    #   - restart ufw

  - name: Enable ufw
    ufw: state=enabled

  - name:  Create user
    user:
      name: admin
      comment: "Admin"
      uid: 1000
      group: admin
      groups: docker

  - name: Set authorized key took from file
    authorized_key:
      user: admin
      state: present
      key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

  - copy:
      src: docker-compose.yml
      dest: /home/admin/
      owner: admin
      group: admin
      mode: 0644

  - copy:
      src: secrets.env
      dest: /home/admin/
      owner: admin
      group: admin
      mode: 0600

  - copy:
      src: spiped-keyfile
      dest: /home/admin/
      owner: admin
      group: admin
      mode: 0600

  - copy:
      src: volumes/proxy/templates/nginx.tmpl
      dest: /home/admin/volumes/proxy/templates/
      owner: admin
      group: admin
      mode: 0644

  - name: Start docker services using docker-compose.yml
    docker_service:
      project_src: /home/admin/
      build: no
      pull: yes
    become: true
    become_user: admin
